{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputVal","setInputVal","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpert","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAYA,OACI,sBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBAEGJ,EAASK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAkBO,QAK9C,SACI,uBACIC,KAAK,OACLC,MAAQT,EACRU,SAfc,SAAAP,GAAC,OAAIF,EAAYE,EAAEQ,OAAOF,a,+BCPlDG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAUH,GAFrD,+DAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAcLM,GAdK,4CAAH,sDAiBET,ICfFgB,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAAA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAX,GACFS,EAAS,CACLf,KAAMM,EACPO,SAAS,SAKrB,CAACpB,IAEGqB,EDjB0BI,CAAczB,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oDAAd,SAAqEhB,IAEnEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAESA,GADCA,EAAIC,aEYnBe,EA1BG,WAGd,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblC2B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.053ce2bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputVal, setInputVal] = useState('');\r\n\r\n    const handleInputChange = e => setInputVal(e.target.value);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if ( inputVal.trim().length > 2 ) {\r\n            setCategories(categories => [inputVal, ...categories]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\" \r\n                value={ inputVal }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=RDqMy938aD99sGCtQm9Gcm9W5VM0YI8f`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__faster\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate__faster\" >{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\" >Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                    <GifGridItem\r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(images => {\r\n                setstate({\r\n                    data: images,\r\n                   loading: false\r\n               })\r\n    })\r\n\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpert = () => {\r\n\r\n    // const categories = ['Star Wars', 'The Witcher', 'The Boys'];\r\n    const [categories, setCategories] = useState(['Star Wars']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpert;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpert from './GifExpert';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpert />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}